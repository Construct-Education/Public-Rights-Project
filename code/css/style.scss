* {
    box-sizing: border-box;
}

img {
    max-width: 100%;
}

// SOURCE: https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
// RESPONSIVE BREAKPOINTS
$breakpoints: ( "xsmall": ( min-width: 480px, ), "small": ( min-width: 768px, ), "medium": ( min-width: 992px, ), "large": ( min-width: 1200px, ), ) !default;
/// Mixin to manage responsive breakpoints
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

// CALLOUTS
.construct--callout {
    display: flex;
    flex-direction: column;
    align-items: center;
    .icon-container {
        width: 65px;
        img {
            width: 65px;
        }
    }
    .content-container {
        margin-top: 20px;
    }
    @include respond-to("xsmall") {
        flex-direction: row;
        .icon-container {
            width: 115px;
            margin-right: 15px;
            img {
                width: 75px;
            }
        }
        .content-container {
            width: 100%;
        }
    }
}

.construct--callout-floating {
    display: block;
    margin: 40px 0 30px;
    @include respond-to("small") {
        padding-right: 35px;
    }
    .construct--callout-floating--inner {
        background: #dddddc;
        padding: 20px;
        width: 100%;
        position: relative;
        display: flex;
        @include respond-to("small") {
            padding: 30px;
            padding-top: 40px;
            margin: 0 auto;
            margin-left: 35px;
            margin-left: 35px;
            display: block;
        }
        .icon-container {
            width: 75px;
            padding-right: 15px;
            img {
                position: static;
                width: 65px;
            }
            @include respond-to("small") {
                width: 100%;
                padding-right: 0;
                img {
                    position: absolute;
                    transform: translateX(-50%);
                    top: -30px;
                    left: 0;
                }
            }
        }
    }
}

.construct--callout-floating,
.construct--callout-borders,
.construct--callout {
    .content-container {
        h3,
        h2,
        h1,
        h4 {
            margin-top: 0;
        }
    }
}

.construct--callout-borders {
    display: block;
    margin: 40px 0 30px;
    border-color: #1D84D2;
    border-style: solid;
    border-width: 0px 5px;
    padding: 30px 20px;
    background: #9FC5E1;
}

// MODULE CARDS
.construct--module-card--container--outer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-template-rows: repeat(auto-fit, minmax(150px, 200px));
    gap: 20px;
}

.construct--module-card--container {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    min-height: 200px;
    padding: 30px;
    border-radius: 20px;
    background: #ffffff;
    background-image: url("../../assets/Images/module-card-bg.png");
    box-shadow: 0px 3px 15px -1px rgba(0, 0, 0, 0.25);
    background-position: center right;
    background-repeat: no-repeat;
    &:hover {
        box-shadow: 0px 3px 15px -3px rgba(0, 0, 0, 0.25);
    }
    &,
    >* {
        text-decoration: none;
    }
    h4 {
        margin: 0;
        color: #1D84D2;
        text-transform: uppercase;
    }
    h3 {
        margin: 10px 0;
        font-family: serif;
        font-weight: bold;
        background-color: #ffffff;
        color: #37393C;
        align-self: self-start;
    }
}

// TABS
li.ui-state-default.ui-corner-top {
    &.ui-tabs-active {
        .ui-tabs-anchor {
            background: #373a3d;
            color: #ffffff;
        }
    }
    .ui-tabs-anchor {
        color: #ffffff;
        background: #1d85d4;
        text-decoration: none !important;
        font-weight: bold;
    }
}

.ui-tabs .ui-tabs-panel {
    background: #555a5f;
    color: #ffffff;
    padding: 30px;
}